
//https://developer.android.com/kotlin/learn#anonymous (람다식, 고차함수 설명)

fun addNum1(n1 : Int, n2 : Int) : Int{
    return n1+n2
}

//람다식(익명 함수) : addNum1함수를 람다식으로 표현하면 addNum2와 같이 된다
// -> 좌측에는 인자 / -> 우측에는 함수 내용 & 마지막 줄은 리턴문(return 생략) & 함수 내용이 여러 줄로 구성되어 있다면 ; 로 구분
// val 익명 형태로 선언
val addNum2 = {n1 : Int, n2 : Int -> n1+ n2} 

//인자와 리턴의 자료형이 다른 경우
//val 함수이름 : (인자 형식)->리턴 형식 = {인자 -> 함수 내용}
val Fc : (String)->Int = {Input -> Input.length} 
val Fc1 : (Int)->Double = {Input -> Input.toDouble()}
val Fc2 : (Int, Int) -> Double = {Input1, Input2 -> val Output = Input1 + Input2; Output.toDouble()}
//인자의 개수만큼 ( ,)안에 각 타입을 지정해준다

//고차함수
fun Fc3(Input1 : Int, mapper:(Int)->Double){
    return mapper(Input1)
}

fun main(){
   println("5 + 5= " + addNum1(5,5))
   println("5 + 5= " + addNum2(5,5))
   println("String length :" + Fc("Hello friends"))
   println("Int to Double : " + Fc1(10))
   println("Int sum to Double : " + Fc2(10,20))

}